description: prevent closure compiler from files not found error
author: Wengling Chen <feiyu2817@gmail.com>

---
 ui/webui/resources/js/assert.js                    |  6 +--
 .../resources/js/cr/ui/focus_outline_manager.js    |  2 +-
 ui/webui/resources/js/i18n_behavior.js             |  5 +--
 ui/webui/resources/js/load_time_data.js            |  7 +--
 ui/webui/resources/js/parse_html_subset.js         |  2 +-
 ui/webui/resources/js/promise_resolver.js          |  4 +-
 ui/webui/resources/js/util.js                      | 52 ++++++++++------------
 ui/webui/resources/js/web_ui_listener_behavior.js  |  4 +-
 8 files changed, 34 insertions(+), 48 deletions(-)

diff --git a/ui/webui/resources/js/assert.js b/ui/webui/resources/js/assert.js
--- a/ui/webui/resources/js/assert.js
+++ b/ui/webui/resources/js/assert.js
@@ -15,7 +15,7 @@
  * @param {string=} opt_message A message to show on failure.
  * @return {T} A non-null |condition|.
  */
-/* #export */ function assert(condition, opt_message) {
+function assert(condition, opt_message) {
   if (!condition) {
     let message = 'Assertion failed';
     if (opt_message) {
@@ -57,7 +57,7 @@
  *
  * @param {string=} opt_message A message to show when this is hit.
  */
-/* #export */ function assertNotReached(opt_message) {
+function assertNotReached(opt_message) {
   assert(false, opt_message || 'Unreachable code hit');
 }
 
@@ -68,7 +68,7 @@
  * @return {T}
  * @template T
  */
-/* #export */ function assertInstanceof(value, type, opt_message) {
+function assertInstanceof(value, type, opt_message) {
   // We don't use assert immediately here so that we avoid constructing an error
   // message if we don't have to.
   if (!(value instanceof type)) {
diff --git a/ui/webui/resources/js/cr/ui/focus_outline_manager.js b/ui/webui/resources/js/cr/ui/focus_outline_manager.js
--- a/ui/webui/resources/js/cr/ui/focus_outline_manager.js
+++ b/ui/webui/resources/js/cr/ui/focus_outline_manager.js
@@ -27,7 +27,7 @@ cr.define('cr.ui', function() {
    * it.
    *
    */
-  /* #export */ class FocusOutlineManager {
+  class FocusOutlineManager {
     /**
      * @param {!Document} doc The document to attach the focus outline manager
      *     to.
diff --git a/ui/webui/resources/js/i18n_behavior.js b/ui/webui/resources/js/i18n_behavior.js
--- a/ui/webui/resources/js/i18n_behavior.js
+++ b/ui/webui/resources/js/i18n_behavior.js
@@ -10,11 +10,8 @@
  * handled by a C++ templatizer.
  */
 
-// #import {parseHtmlSubset} from './parse_html_subset.m.js';
-// #import {loadTimeData, SanitizeInnerHtmlOpts} from './load_time_data.m.js';
-
 /** @polymerBehavior */
-/* #export */ const I18nBehavior = {
+const I18nBehavior = {
   properties: {
     /**
      * The language the UI is presented in. Used to signal dynamic language
diff --git a/ui/webui/resources/js/load_time_data.js b/ui/webui/resources/js/load_time_data.js
--- a/ui/webui/resources/js/load_time_data.js
+++ b/ui/webui/resources/js/load_time_data.js
@@ -14,9 +14,6 @@
  * change if the page is re-opened later.
  */
 
-// #import {assert} from './assert.m.js';
-// #import {parseHtmlSubset} from './parse_html_subset.m.js';
-
 /**
  * @typedef {{
  *   substitutions: (Array<string>|undefined),
@@ -24,10 +21,10 @@
  *   tags: (Array<string>|undefined),
  * }}
  */
-/* #export */ let SanitizeInnerHtmlOpts;
+let SanitizeInnerHtmlOpts;
 
 // eslint-disable-next-line no-var
-/* #export */ /** @type {!LoadTimeData} */ var loadTimeData;
+/** @type {!LoadTimeData} */ var loadTimeData;
 
 // Expose this type globally as a temporary work around until
 // https://github.com/google/closure-compiler/issues/544 is fixed.
diff --git a/ui/webui/resources/js/parse_html_subset.js b/ui/webui/resources/js/parse_html_subset.js
--- a/ui/webui/resources/js/parse_html_subset.js
+++ b/ui/webui/resources/js/parse_html_subset.js
@@ -12,7 +12,7 @@
  * @throws {Error} In case of non supported markup.
  * @return {DocumentFragment} A document fragment containing the DOM tree.
  */
-/* #export */ const parseHtmlSubset = (function() {
+const parseHtmlSubset = (function() {
   'use strict';
 
   const allowedAttributes = {
diff --git a/ui/webui/resources/js/promise_resolver.js b/ui/webui/resources/js/promise_resolver.js
--- a/ui/webui/resources/js/promise_resolver.js
+++ b/ui/webui/resources/js/promise_resolver.js
@@ -2,8 +2,6 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-// #import {assertNotReached} from './assert.m.js';
-
 /**
  * @fileoverview PromiseResolver is a helper class that allows creating a
  * Promise that will be fulfilled (resolved or rejected) some time later.
@@ -20,7 +18,7 @@
 
 /** @template T */
 // eslint-disable-next-line no-var
-/* #export */ var PromiseResolver = class {
+var PromiseResolver = class {
   constructor() {
     /** @private {function(T=): void} */
     this.resolve_;
diff --git a/ui/webui/resources/js/util.js b/ui/webui/resources/js/util.js
--- a/ui/webui/resources/js/util.js
+++ b/ui/webui/resources/js/util.js
@@ -2,16 +2,12 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-// #import {assertInstanceof} from './assert.m.js';
-// #import {dispatchSimpleEvent} from './cr.m.js';
-// <include src="assert.js">
-
 /**
  * Alias for document.getElementById. Found elements must be HTMLElements.
  * @param {string} id The ID of the element to find.
  * @return {HTMLElement} The found element or null if not found.
  */
-/* #export */ function $(id) {
+function $(id) {
   // Disable getElementById restriction here, since we are instructing other
   // places to re-use the $() that is defined here.
   // eslint-disable-next-line no-restricted-properties
@@ -26,7 +22,7 @@
  * @param {string} id The ID of the element to find.
  * @return {Element} The found element or null if not found.
  */
-/* #export */ function getSVGElement(id) {
+function getSVGElement(id) {
   // Disable getElementById restriction here, since it is not suitable for SVG
   // elements.
   // eslint-disable-next-line no-restricted-properties
@@ -38,7 +34,7 @@
  * @return {?Element} The currently focused element (including elements that are
  *     behind a shadow root), or null if nothing is focused.
  */
-/* #export */ function getDeepActiveElement() {
+function getDeepActiveElement() {
   let a = document.activeElement;
   while (a && a.shadowRoot && a.shadowRoot.activeElement) {
     a = a.shadowRoot.activeElement;
@@ -55,7 +51,7 @@
  * other users. It's removed right away so it doesn't clutter the DOM.
  * @param {string} msg The text to be pronounced.
  */
-/* #export */ function announceAccessibleMessage(msg) {
+function announceAccessibleMessage(msg) {
   const element = document.createElement('div');
   element.setAttribute('aria-live', 'polite');
   element.style.position = 'fixed';
@@ -74,7 +70,7 @@
  * @param {Location} location The URL to generate the CSS url for.
  * @return {Object} Dictionary containing name value pairs for URL
  */
-/* #export */ function parseQueryParams(location) {
+function parseQueryParams(location) {
   const params = {};
   const query = unescape(location.search.substring(1));
   const vars = query.split('&');
@@ -93,7 +89,7 @@
  * @param {string} value The query parameter value.
  * @return {string} The constructed new URL.
  */
-/* #export */ function setQueryParam(location, key, value) {
+function setQueryParam(location, key, value) {
   const query = parseQueryParams(location);
   query[encodeURIComponent(key)] = encodeURIComponent(value);
 
@@ -110,7 +106,7 @@
  * @param {string} className A class to search for.
  * @return {Element} A node with class of |className| or null if none is found.
  */
-/* #export */ function findAncestorByClass(el, className) {
+function findAncestorByClass(el, className) {
   return /** @type {Element} */ (findAncestor(el, function(el) {
     return el.classList && el.classList.contains(className);
   }));
@@ -123,7 +119,7 @@
  *     nodes.
  * @return {Node} The found ancestor or null if not found.
  */
-/* #export */ function findAncestor(node, predicate) {
+function findAncestor(node, predicate) {
   let last = false;
   while (node != null && !(last = predicate(node))) {
     node = node.parentNode;
@@ -139,7 +135,7 @@
  * @param {function(Event):boolean=} opt_allowDragStart Unless this function
  *    is defined and returns true, the ondragstart event will be surpressed.
  */
-/* #export */ function disableTextSelectAndDrag(
+function disableTextSelectAndDrag(
     opt_allowSelectStart, opt_allowDragStart) {
   // Disable text selection.
   document.onselectstart = function(e) {
@@ -160,7 +156,7 @@
  * Check the directionality of the page.
  * @return {boolean} True if Chrome is running an RTL UI.
  */
-/* #export */ function isRTL() {
+function isRTL() {
   return document.documentElement.dir == 'rtl';
 }
 
@@ -171,7 +167,7 @@
  * @param {string} id The identifier name.
  * @return {!HTMLElement} the Element.
  */
-/* #export */ function getRequiredElement(id) {
+function getRequiredElement(id) {
   return assertInstanceof(
       $(id), HTMLElement, 'Missing required element: ' + id);
 }
@@ -185,7 +181,7 @@
  *     context object for querySelector.
  * @return {!HTMLElement} the Element.
  */
-/* #export */ function queryRequiredElement(selectors, opt_context) {
+function queryRequiredElement(selectors, opt_context) {
   const element = (opt_context || document).querySelector(selectors);
   return assertInstanceof(
       element, HTMLElement, 'Missing required element: ' + selectors);
@@ -248,7 +244,7 @@
  * @param {string} value The value of the param.
  * @return {string} The new URL.
  */
-/* #export */ function appendParam(url, key, value) {
+function appendParam(url, key, value) {
   const param = encodeURIComponent(key) + '=' + encodeURIComponent(value);
 
   if (url.indexOf('?') == -1) {
@@ -263,7 +259,7 @@
  * @param {string} className The class name to use.
  * @return {Element} The created element.
  */
-/* #export */ function createElementWithClassName(type, className) {
+function createElementWithClassName(type, className) {
   const elm = document.createElement(type);
   elm.className = className;
   return elm;
@@ -278,7 +274,7 @@
  *     transitionend to happen. If not specified, it is fetched from |el|
  *     using the transitionDuration style value.
  */
-/* #export */ function ensureTransitionEndEvent(el, opt_timeOut) {
+function ensureTransitionEndEvent(el, opt_timeOut) {
   if (opt_timeOut === undefined) {
     const style = getComputedStyle(el);
     opt_timeOut = parseFloat(style.transitionDuration) * 1000;
@@ -305,7 +301,7 @@
  *     queried from.
  * @return {number} The Y document scroll offset.
  */
-/* #export */ function scrollTopForDocument(doc) {
+function scrollTopForDocument(doc) {
   return doc.documentElement.scrollTop || doc.body.scrollTop;
 }
 
@@ -315,7 +311,7 @@
  *     queried from.
  * @param {number} value The target Y scroll offset.
  */
-/* #export */ function setScrollTopForDocument(doc, value) {
+function setScrollTopForDocument(doc, value) {
   doc.documentElement.scrollTop = doc.body.scrollTop = value;
 }
 
@@ -325,7 +321,7 @@
  *     queried from.
  * @return {number} The X document scroll offset.
  */
-/* #export */ function scrollLeftForDocument(doc) {
+function scrollLeftForDocument(doc) {
   return doc.documentElement.scrollLeft || doc.body.scrollLeft;
 }
 
@@ -335,7 +331,7 @@
  *     queried from.
  * @param {number} value The target X scroll offset.
  */
-/* #export */ function setScrollLeftForDocument(doc, value) {
+function setScrollLeftForDocument(doc, value) {
   doc.documentElement.scrollLeft = doc.body.scrollLeft = value;
 }
 
@@ -344,7 +340,7 @@
  * @param {string} original The original string.
  * @return {string} The string with all the characters mentioned above replaced.
  */
-/* #export */ function HTMLEscape(original) {
+function HTMLEscape(original) {
   return original.replace(/&/g, '&amp;')
       .replace(/</g, '&lt;')
       .replace(/>/g, '&gt;')
@@ -361,7 +357,7 @@
  *     |maxLength|. Otherwise the first |maxLength| - 1 characters with '...'
  *     appended.
  */
-/* #export */ function elide(original, maxLength) {
+function elide(original, maxLength) {
   if (original.length <= maxLength) {
     return original;
   }
@@ -373,7 +369,7 @@
  * @param {string} str The source string.
  * @return {string} The escaped string.
  */
-/* #export */ function quoteString(str) {
+function quoteString(str) {
   return str.replace(/([\\\.\+\*\?\[\^\]\$\(\)\{\}\=\!\<\>\|\:])/g, '\\$1');
 }
 
@@ -386,7 +382,7 @@
  * @param {function(!Event)} callback Called at most once. The
  *     optional return value is passed on by the listener.
  */
-/* #export */ function listenOnce(target, eventNames, callback) {
+function listenOnce(target, eventNames, callback) {
   if (!Array.isArray(eventNames)) {
     eventNames = eventNames.split(/ +/);
   }
@@ -511,7 +507,7 @@ if (!('key' in KeyboardEvent.prototype)) {
  * @param {!Event} e
  * @return {boolean} Whether a modifier key was down when processing |e|.
  */
-/* #export */ function hasKeyModifiers(e) {
+function hasKeyModifiers(e) {
   return !!(e.altKey || e.ctrlKey || e.metaKey || e.shiftKey);
 }
 
diff --git a/ui/webui/resources/js/web_ui_listener_behavior.js b/ui/webui/resources/js/web_ui_listener_behavior.js
--- a/ui/webui/resources/js/web_ui_listener_behavior.js
+++ b/ui/webui/resources/js/web_ui_listener_behavior.js
@@ -7,11 +7,9 @@
  * automatically remove WebUI listeners when detached.
  */
 
-// #import {addWebUIListener, removeWebUIListener} from './cr.m.js';
-
 /** @polymerBehavior */
 // eslint-disable-next-line no-var
-/* #export */ var WebUIListenerBehavior = {
+var WebUIListenerBehavior = {
   properties: {
     /**
      * Holds WebUI listeners that need to be removed when this element is
